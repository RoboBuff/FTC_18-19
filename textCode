package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.util.ElapsedTime;

import static org.firstinspires.ftc.teamcode.robotHardware.clawClose;
import static org.firstinspires.ftc.teamcode.robotHardware.clawOpen;


@TeleOp(group = "test", name = "testCode")
public class testCode extends OpMode {

    robotHardware           myRobot                 = new robotHardware();

    private ElapsedTime     runtime                 = new ElapsedTime();

    static final double     COUNTS_PER_MOTOR_REV    = 1680 ;    // eg: TETRIX Motor Encoder
    static final double     DRIVE_GEAR_REDUCTION    = 2.0 ;     // This is < 1.0 if geared UP
    static final double     WHEEL_DIAMETER_INCHES   = 4.0 ;     // For figuring circumference
    static final double     COUNTS_PER_INCH         = (COUNTS_PER_MOTOR_REV * DRIVE_GEAR_REDUCTION) /
            (WHEEL_DIAMETER_INCHES * 3.1415);
    static final double     DRIVE_SPEED             = 0.6;
    static final double     STOP_SPEED              = 0.0;
    static final double     TURN_SPEED              = 0.5;

    double Left;
    double Right;

    double leftController;

    @Override
    public void init() {

        myRobot.init(hardwareMap);

    }

    @Override
    public void loop() {

        powerControl();

        options();

        debug();

    }

    private void powerControl(){

        Right   = gamepad1.right_stick_y;
        Left    = gamepad1.left_stick_y;

        myRobot.leftMotor.setPower(Left);

        myRobot.rightMotor.setPower(Right);

        if (gamepad1.left_bumper){

            myRobot.armMotor.setPower(0.5);
        }else if (gamepad1.right_bumper){

            myRobot.armMotor.setPower(-0.5);
        }else{

            myRobot.armMotor.setPower(0);
        }

        if (gamepad1.a){

            myRobot.linearMotor.setPower(1);

        }else if (gamepad1.b){

            myRobot.linearMotor.setPower(-1);

        }
        else{

            myRobot.linearMotor.setPower(0);
        }


    }

    private void options(){


        if (gamepad2.x) {
            encoderDrive(DRIVE_SPEED, 80, 5);
        }

    }

    private void encoderDrive(double speed,
                             double leftInches, double timeoutS) {
        int newLeftTarget;

        newLeftTarget = myRobot.armMotor.getCurrentPosition() + (int)(leftInches * COUNTS_PER_INCH);

        myRobot.armMotor.setTargetPosition(newLeftTarget);

        myRobot.armMotor.setMode(DcMotor.RunMode.RUN_TO_POSITION);

        runtime.reset();
        myRobot.armMotor.setPower(Math.abs(speed));

        if (runtime.seconds() < timeoutS){

            myRobot.armMotor.setPower(0);
        }
    }

    private void debug(){

        telemetry.addData("Servo tilt position ", myRobot.servoTilt.getPosition());
        telemetry.addData("Power of left top wheel ", myRobot.leftMotor.getPower());
        telemetry.update();
    }
}
